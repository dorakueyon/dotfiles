# add an on_enter command to the default mode
:: default : yabai -m config active_window_border_color 0xff0f6288

# open terminal, blazingly fast compared to iTerm/Hyper
shift + alt - return : open -na /Applications/Alacritty.app
ctrl  + alt - return : osascript -e 'tell application "iTerm2"' -e 'activate' -e 'create window with default profile' -e 'end tell'

# disable hide-windows shortcut
# cmd - h : return 0

# disable minimize-windows shortcut
cmd - m : return 0

# old chunkwm config for reference (remove rest of conf if using):
# .load ".config/chunkwm/skhdrc"

#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey   = <keysym> ':' <command> |
#                                  <keysym> '->' ':' <command>
#
#                       keysym   = <mod> '-' <key> | <key>
#
#                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
#
#                       key      = <literal> | <keycode>
#
#                       literal  = 'single letter or built-in keyword'
#
#                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       ->       = keypress is not consumed by skhd
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.

# key literals
# "["           (0x21)
# "]"           (0x1E)
# "`" (`~`)     (0x32)
#

# open terminal
#alt - return : open -a iTerm --new

# close window
# shift + alt - q : sid="$(yabai -m query --spaces --space | jq '.index')" && osascript -e "tell application \"Finder\" to set p to item 1 of (get file of (processes whose frontmost = true)) as text" -e "tell application p to quit" && yabai -m space --focus "${sid}"
shift + alt - q [
    "alacritty" : sid=$(yabai -m query --windows --window | jq -r '.space') && echo "focusing space: $sid" >&2 && skhd -k "cmd - q"       && yabai -m space --focus "${sid}"
    *           : sid=$(yabai -m query --windows --window | jq -r '.space') && echo "focusing space: $sid" >&2 && yabai -m window --close && yabai -m space --focus "${sid}"
]

# focus window
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

alt - left : yabai -m window --focus west
alt - down : yabai -m window --focus south
alt - up   : yabai -m window --focus north
alt - right: yabai -m window --focus east

# swap window
shift + alt - h : yabai -m window --swap west
shift + alt - j : yabai -m window --swap south
shift + alt - k : yabai -m window --swap north
shift + alt - l : yabai -m window --swap east

#shift + alt - left : yabai -m window --swap west
#shift + alt - down : yabai -m window --swap south
#shift + alt - up   : yabai -m window --swap north
#shift + alt - right: yabai -m window --swap east


# move window
ctrl + shift + alt - h : yabai -m window --warp west
ctrl + shift + alt - j : yabai -m window --warp south
ctrl + shift + alt - k : yabai -m window --warp north
ctrl + shift + alt - l : yabai -m window --warp east

# balance size of windows
ctrl + shift + alt - 0 : yabai -m space --balance

# make floating window fill screen
#shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
#shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# make floating window fill right-half of screen
#shift + alt - right  : yabai -m window --grid 1:2:1:0:1:1

# create desktop, move window and follow focus
# shift + cmd - n : yabai -m space --create;\
#                   id=$(yabai -m query --displays --display | grep "spaces");\
#                   yabai -m window --space $(echo ${id:10:${#id}-10});\
#                   yabai -m space --focus $(echo ${id:10:${#id}-10})

# create desktop and follow focus
# cmd + alt - n : yabai -m space --create;\
#                 id=$(yabai -m query --displays --display | grep "spaces");\
#                 yabai -m space --focus $(echo ${id:10:${#id}-10})

# destroy desktop
# cmd + alt - w : yabai -m space --destroy

# reload config
shift + alt - c : echo "reloading configs" >&2 ; skhd --reload & ; ${XDG_CONFIG_HOME:-$HOME/.config}/yabai/yabairc >> /usr/local/var/log/yabai/yabai.out.log 2>> /usr/local/var/log/yabai/yabai.err.log

# override default desktop switching
ctrl - left : yabai -m space --focus prev
ctrl - right : yabai -m space --focus next

# cycle all windows
# cmd - ` / cmd - ~
cmd - 0x32 : ~/.config/skhd/cycle-windows

#ctrl + alt - n : ~/.config/skhd/cycle-windows
#ctrl + alt - p : ~/.config/skhd/cycle-windows reverse

# fast focus desktop
alt - p : yabai -m space --focus prev
alt - n : yabai -m space --focus next
alt - 1 : yabai -m space --focus 1
alt - 2 : yabai -m space --focus 2
alt - 3 : yabai -m space --focus 3
alt - 4 : yabai -m space --focus 4
alt - 5 : yabai -m space --focus 5
alt - 6 : yabai -m space --focus 6
alt - 7 : yabai -m space --focus 7
alt - 8 : yabai -m space --focus 8
alt - 9 : yabai -m space --focus 9
alt - 0 : yabai -m space --focus 10


# send window to desktop and follow focus
shift + alt - p : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --space prev   && yabai -m window --focus "${wid}"
shift + alt - n : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --space next   && yabai -m window --focus "${wid}"
shift + alt - 1 : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --space 1      && yabai -m window --focus "${wid}"
shift + alt - 2 : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --space 2      && yabai -m window --focus "${wid}"
shift + alt - 3 : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --space 3      && yabai -m window --focus "${wid}"
shift + alt - 4 : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --space 4      && yabai -m window --focus "${wid}"
shift + alt - 5 : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --space 5      && yabai -m window --focus "${wid}"
shift + alt - 6 : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --space 6      && yabai -m window --focus "${wid}"
shift + alt - 7 : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --space 7      && yabai -m window --focus "${wid}"
shift + alt - 8 : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --space 8      && yabai -m window --focus "${wid}"
shift + alt - 9 : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --space 9      && yabai -m window --focus "${wid}"
shift + alt - 0 : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --space 10     && yabai -m window --focus "${wid}"

# focus monitor
alt - 0x21 : yabai -m display --focus "$(~/.config/yabai/get-display.sh left)"  # alt - [
alt - 0x1E : yabai -m display --focus "$(~/.config/yabai/get-display.sh right)" # alt - ]

# send window to monitor and follow focus
# shift + alt - [
shift + alt - 0x21 : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --display "$(~/.config/yabai/get-display.sh left)" && yabai -m window --focus "${wid}"
# shift + alt - ]
shift + alt - 0x1E : yabai -m window "${wid:=$(yabai -m query --windows --window | jq -cr '.id')}" --display "$(~/.config/yabai/get-display.sh right)" && yabai -m window --focus "${wid}"

# move window
shift + ctrl - a : yabai -m window --move rel:-20:0
shift + ctrl - s : yabai -m window --move rel:0:20
shift + ctrl - w : yabai -m window --move rel:0:-20
shift + ctrl - d : yabai -m window --move rel:20:0

# set insertion point in focused container
shift + cmd + alt - h : yabai -m window --insert west
shift + cmd + alt - j : yabai -m window --insert south
shift + cmd + alt - k : yabai -m window --insert north
shift + cmd + alt - l : yabai -m window --insert east

# rotate tree
shift + alt - r : yabai -m space --rotate 90

# mirror tree y-axis
alt - y : yabai -m space --mirror y-axis

# mirror tree x-axis
alt - x : yabai -m space --mirror x-axis

# toggle desktop offset
shift + alt - a : yabai -m space --toggle padding; yabai -m space --toggle gap

# toggle window parent zoom
alt - w : yabai -m window --toggle zoom-parent

# toggle window split type
alt - e : yabai -m window --toggle split

# toggle window fullscreen zoom
alt - f : yabai -m window --toggle zoom-fullscreen

# toggle window native fullscreen
shift + alt - f : yabai -m window --toggle native-fullscreen

# toggle window border
shift + alt - b : yabai -m window --toggle border

# float / unfloat window and center on screen
shift + alt - space : yabai -m window --toggle float; \
                      yabai -m window --grid 4:4:1:1:2:2

# toggle sticky, topmost and resize to picture-in-picture size
#             -
shift + alt - 0x1B : yabai -m window --toggle sticky ; \
                     yabai -m window --toggle topmost ; \
                     yabai -m window --grid 10:10:7:7:3:3

# change layout of desktop
cmd + alt - a : yabai -m space --layout bsp
cmd + alt - d : yabai -m space --layout float

# signal dock to make windows topmost when floated
# chunkc set window_float_topmost 1
# signal dock to move window when using mouse-drag on floating windows
# chunkc set window_use_cgs_move 1

# ===============
# ==> Resize Mode
# ===============
# https://pietergorsira.com/posts/2018/08/06/chunkwm-modal-resizing.html

:: resize @ : yabai -m config active_window_border_color 0xff24ccaa
    # binding to enter resize mode
    alt - r ; resize

    # return to default mode
    resize < return ; default
    resize < escape ; default
    resize < alt - r ; default

    # keep movement controls
    resize < alt - h : yabai -m window --focus west
    resize < alt - j : yabai -m window --focus south
    resize < alt - k : yabai -m window --focus north
    resize < alt - l : yabai -m window --focus east

    # shift and resize
    # https://github.com/koekeishiya/yabai/issues/200#issuecomment-519257233
    resize < h : yabai -m window west --resize right:-20:0 2> /dev/null || yabai -m window --resize right:-20:0
    resize < j : yabai -m window north --resize bottom:0:20 2> /dev/null || yabai -m window --resize bottom:0:20
    resize < k : yabai -m window south --resize top:0:-20 2> /dev/null || yabai -m window --resize top:0:-20
    resize < l : yabai -m window east --resize left:20:0 2> /dev/null || yabai -m window --resize left:20:0
